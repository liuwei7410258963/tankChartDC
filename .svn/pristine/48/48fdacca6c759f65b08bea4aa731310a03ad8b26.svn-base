package com.oket.tankchartdc.controller;


import com.alibaba.fastjson.JSONObject;

import com.oket.tankchartdc.entity.DitEntity;
import com.oket.tankchartdc.service.DitService;
import com.oket.util.CommonUtil;
import io.swagger.annotations.ApiOperation;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import static com.oket.tankchartdc.mina.ifsf.IFSFAcceptor.ifsfFlag;
import static com.oket.tankchartdc.mina.json.JSONAcceptor.jsonFlag;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author lw
 * @since 2020-03-30
 */
@RestController
@RequestMapping("/tankchartdc/dit")
public class DitController {
    @Autowired
    DitService ditService;

    /**
     * 查询当前dit端口
     */
    @PostMapping("/select")
    @ApiOperation(value = "查询当前dit端口")
    public JSONObject select(@RequestBody DitEntity ditEntity) {
        return CommonUtil.successJson(ditService.select(ditEntity));
    }

    /**
     * 当前dit端口
     */
    @PostMapping("/update")
    @ApiOperation(value = "修改")
    public JSONObject update(@RequestBody DitEntity ditEntity) {
        int flag = ditService.change(ditEntity);
        if(flag==1){
            return CommonUtil.successJson();
        }
        else {
            return CommonUtil.failJson();
        }
    }

    /**
     * 开启Ifsf
     */
    @PostMapping("/runIfsf")
    @ApiOperation(value = "开启ifsf")
    public JSONObject run(@RequestBody DitEntity ditEntity) {
        ditService.runIfsf(ditEntity);
        if(ifsfFlag){
            return CommonUtil.successJson();
        }
        else{
            return CommonUtil.failJson();
        }
    }

    /**
     * 关闭ifsf
     */
    @PostMapping("/closeIfsf")
    @ApiOperation(value = "关闭ifsf")
    public JSONObject closeIfsf(@RequestBody DitEntity ditEntity) {
        ditService.closeIfsf(ditEntity);
        return CommonUtil.successJson();
    }

    /**
     * 开启json
     */
    @PostMapping("/runJson")
    @ApiOperation(value = "开启json")
    public JSONObject runJson(@RequestBody DitEntity ditEntity) {
        ditService.runJson(ditEntity);
        if(jsonFlag){
            return CommonUtil.successJson();
        }
        else{
            return CommonUtil.failJson();
        }
    }

    /**
     * 关闭json
     */
    @PostMapping("/closeJson")
    @ApiOperation(value = "关闭json")
    public JSONObject closeJson(@RequestBody DitEntity ditEntity) {
        ditService.closeJson(ditEntity);
        return CommonUtil.successJson();
    }

}
